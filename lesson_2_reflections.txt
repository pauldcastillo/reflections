What happens when you initialize a repository? Why do you need to do it?

    It creates a .git folder that keeps all the files neccesary for tracking
    your local changes.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    The staging area lets you differentiate between what you're working, what
    you want to add to the repository, and what is already in the repository.

How can you use the staging area to make sure you have one commit per logical
change?

    You can make sure to only add changes to the staging area if they all
    pertain to the same logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    Branches are useful for when you want to make changes that are separate from
    your master branch. Since these changes are separate, you can track them
    separately as well.

How do the diagrams help you visualize the branch structure?

    It helps make it easier to understand what commits are in what branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    Merging two branches together puts the changes to the files in each branch
    into one set of files. It's represented in such a way to show the history
    of those branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

    Git's automatic merging is very useful because it's much easier to offload
    that work to git, but merging manually is also useful because it can be
    more accurate in what you want the final product to be.